#!/bin/bash
##############################################################################
# Copyright (c) 2019-2022, Lawrence Livermore National Security, LLC and
# other Serac Project Developers. See the top-level LICENSE file for
# details.
#
# SPDX-License-Identifier: (BSD-3-Clause)
##############################################################################

########################
## Test Invocations
#
# TOSS3: salloc -N2 ./ats.sh
# BlueOS: lalloc 2 ./ats.sh
# WSL: ./ats.sh

Help()
{
    echo "Test Invocations"
    echo "=========================="
    echo "TOSS3: salloc -N2 ./ats.sh"
    echo "BlueOS: lalloc 2 ./ats.sh"
    echo "WSL: ./ats.sh"
    echo "Options:"
    echo "  --rebaseline = copies last generated baselines over existing"
    echo "  --help = displays this message"
}


# Variables used inside of the base test.ats and this script
export ATS_SERAC_BIN_DIR=@SERAC_BIN_DIR@/bin
export ATS_SERAC_REPO_DIR=@SERAC_REPO_DIR@
export ATS_EXECUTABLE=@ATS_EXECUTABLE@
export ATS_SERAC_REBASELINE=0

if [ ! -d "$ATS_SERAC_REPO_DIR" ]; then
    echo "ERROR: Given ATS_SERAC_REPO_DIR does not exist: " $ATS_SERAC_REPO_DIR
    exit 1
fi

if [ ! -d "$ATS_SERAC_BIN_DIR" ]; then
    echo "ERROR: Given ATS_SERAC_BIN_DIR does not exist: " $ATS_SERAC_BIN_DIR
    exit 1
fi

if [ ! -f "$ATS_EXECUTABLE" ]; then
    echo "ERROR: Given ATS_EXECUTABLE does not exist: " $ATS_EXECUTABLE
    exit 1
fi

while getopts ":-:" option; do
    case $option in
        -)  # long options
            case $OPTARG in
                help)
                    Help
                    exit;;
                rebaseline)
                    ATS_SERAC_REBASELINE=1;;
                *)  # invalid
                    echo "Invalid"
                    Help
                    exit;;
            esac;;
        \?) # invalid
            echo "Invalid option"
            Help
            exit;;
    esac
done

# Add Serac's bin directory to path
export PATH=$ATS_SERAC_BIN_DIR:$PATH

echo "~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo "ATS:         " $ATS_EXECUTABLE
echo "BIN DIR:     " $ATS_SERAC_BIN_DIR
echo "REPO DIR:    " $ATS_SERAC_REPO_DIR
echo "REBASELINE?: " $ATS_SERAC_REBASELINE
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~"

# Clean-up old run's logs
rm -rf $SYS_TYPE.*

# Clean-up last run's output
# TODO: add a mode to clean up output
#rm -rf $ATS_SERAC_REPO_DIR/tests/integration/*/*/_output

# Run ATS
$ATS_EXECUTABLE $ATS_SERAC_REPO_DIR/tests/integration/test.ats
if [ $? -ne 0 ]; then { echo "Failed Integration tests, aborting."; exit 1; } fi

