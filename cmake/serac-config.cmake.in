# Copyright (c) 2019-2023, Lawrence Livermore National Security, LLC and
# other Serac Project Developers. See the top-level COPYRIGHT file for details.
#
# SPDX-License-Identifier: (BSD-3-Clause)
#------------------------------------------------------------------------------

cmake_minimum_required(VERSION 3.8 FATAL_ERROR)

@PACKAGE_INIT@

if(NOT SERAC_FOUND)

  #----------------------------------------------------------------------------
  # Set version and paths
  #----------------------------------------------------------------------------
  
  set(SERAC_VERSION       "@SERAC_VERSION_FULL@")
  set(SERAC_VERSION_MAJOR "@SERAC_VERSION_MAJOR@")
  set(SERAC_VERSION_MINOR "@SERAC_VERSION_MINOR@")
  set(SERAC_VERSION_PATCH "@SERAC_VERSION_PATCH@")
  
  set(SERAC_INSTALL_PREFIX "@SERAC_INSTALL_PREFIX@")
  set(SERAC_INCLUDE_DIRS "${SERAC_INSTALL_PREFIX}/include")

  #----------------------------------------------------------------------------
  # Set user configuration options and features
  #----------------------------------------------------------------------------

  set(SERAC_ENABLE_CODEVELOP   @SERAC_ENABLE_CODEVELOP@)
  set(SERAC_ENABLE_CUDA        @ENABLE_CUDA@)

  set(SERAC_USE_ADIAK          @SERAC_USE_ADIAK@)
  set(SERAC_USE_AXOM           @SERAC_USE_AXOM@)
  set(SERAC_USE_CAMP           @SERAC_USE_CAMP@)
  set(SERAC_USE_CALIPER        @SERAC_USE_CALIPER@)
  set(SERAC_USE_CHAI           @SERAC_USE_CHAI@)
  set(SERAC_USE_CONDUIT        @SERAC_USE_CONDUIT@)
  set(SERAC_USE_HDF5           @SERAC_USE_HDF5@)
  set(SERAC_USE_MFEM           @SERAC_USE_MFEM@)
  set(SERAC_USE_MPI            @SERAC_USE_MPI@)
  set(SERAC_USE_PETSC          @SERAC_USE_PETSC@)
  set(SERAC_USE_RAJA           @SERAC_USE_RAJA@)
  set(SERAC_USE_STRUMPACK      @SERAC_USE_STRUMPACK@)
  set(SERAC_USE_SUNDIALS       @SERAC_USE_SUNDIALS@)
  set(SERAC_USE_TRIBOL         @SERAC_USE_TRIBOL@)
  set(SERAC_USE_UMPIRE         @SERAC_USE_UMPIRE@)

  set(SERAC_ADIAK_DIR          "@ADIAK_DIR@")
  set(SERAC_AXOM_DIR           "@AXOM_DIR@")
  set(SERAC_CAMP_DIR           "@CAMP_DIR@")
  set(SERAC_CALIPER_DIR        "@CALIPER_DIR@")
  set(SERAC_CHAI_DIR           "@CHAI_DIR@")
  set(SERAC_CONDUIT_DIR        "@CONDUIT_DIR@")
  set(SERAC_HDF5_DIR           "@HDF5_DIR@")
  set(SERAC_MFEM_DIR           "@MFEM_DIR@")
  set(SERAC_PETSC_DIR          "@PETSC_DIR@")
  set(SERAC_RAJA_DIR           "@RAJA_DIR@")
  set(SERAC_STRUMPACK_DIR      "@STRUMPACK_DIR@")
  set(SERAC_SUNDIALS_DIR       "@SUNDIALS_DIR@")
  set(SERAC_TRIBOL_DIR         "@TRIBOL_DIR@")
  set(SERAC_UMPIRE_DIR         "@UMPIRE_DIR@")

  # Codevelop TPLs are installed alongside Serac
  if(SERAC_ENABLE_CODEVELOP)
    set(SERAC_AXOM_DIR "${SERAC_INSTALL_PREFIX}")
    set(SERAC_MFEM_DIR "${SERAC_INSTALL_PREFIX}")
  endif()

  # Set to real variable unless user overrode it
  foreach(dep ADIAK AXOM CAMP CALIPER CHAI CONDUIT HDF5 MFEM PETSC RAJA STRUMPACK SUNDIALS TRIBOL UMPIRE)
    if (NOT ${dep}_DIR)
      set(${dep}_DIR "${SERAC_${dep}_DIR}")
    endif()
  endforeach()

  #----------------------------------------------------------------------------
  # Bring in required dependencies for this Serac configuration
  #----------------------------------------------------------------------------
  include(CMakeFindDependencyMacro)

  # MFEM
  if(SERAC_USE_MFEM AND NOT TARGET mfem)
    set(SERAC_MFEM_BUILT_WITH_CMAKE @MFEM_BUILT_WITH_CMAKE@)
    if(SERAC_MFEM_BUILT_WITH_CMAKE)
      find_dependency(mfem REQUIRED NO_DEFAULT_PATH PATHS "${MFEM_DIR}/lib/cmake/mfem" NAMES MFEM)
      # MFEM include directories are added as the variable but not always added to the target itself
      target_include_directories(mfem SYSTEM INTERFACE "${MFEM_INCLUDE_DIRS}")
    else()
      add_library(mfem INTERFACE IMPORTED GLOBAL)
      target_include_directories(mfem SYSTEM INTERFACE "@MFEM_INCLUDE_DIRS@")
      target_link_libraries(mfem INTERFACE "@MFEM_LIBRARIES@")
    endif()
  endif()

  # Axom
  # also covers fmt/cli11
  if(SERAC_USE_AXOM)
    find_dependency(Axom REQUIRED NO_DEFAULT_PATH PATHS "${AXOM_DIR}/lib/cmake")
  endif()
  
  # Camp
  if(SERAC_USE_CAMP)
    find_dependency(camp REQUIRED NO_DEFAULT_PATH PATHS "${CAMP_DIR}/lib/cmake/camp")
  endif()

  # Conduit
  if(SERAC_USE_CONDUIT)
    find_dependency(Conduit REQUIRED NO_DEFAULT_PATH PATHS "${CONDUIT_DIR}/lib/cmake/conduit")
  endif()

  # HDF5
  if(SERAC_USE_HDF5)
    set(SERAC_HDF5_DIR     "@HDF5_DIR@")
    # Note: Targets not currently imported
  endif()

  # Tribol
  if(SERAC_USE_TRIBOL)
    find_dependency(tribol REQUIRED NO_DEFAULT_PATH PATHS "${TRIBOL_DIR}/lib/cmake")
  endif()

  # Adiak
  if(SERAC_USE_ADIAK)
    find_dependency(adiak REQUIRED NO_DEFAULT_PATH PATHS "${ADIAK_DIR}")
  endif()

  # Caliper
  if(SERAC_USE_CALIPER)
    # See comment in SetupSeracThirdParty.cmake
    if(SERAC_ENABLE_CUDA)
      if(CMAKE_VERSION VERSION_LESS 3.17)
        message(FATAL_ERROR "Serac+Caliper+CUDA requires CMake > 3.17.")
      else()
        find_package(CUDAToolkit REQUIRED)
      endif() 
    endif()
    find_dependency(caliper REQUIRED NO_DEFAULT_PATH PATHS "${CALIPER_DIR}")
  endif()

  # Petsc
  if(SERAC_USE_PETSC)
    include("${CMAKE_CURRENT_LIST_DIR}/FindPETSc.cmake")
  endif()

  # Umpire
  if(SERAC_USE_UMPIRE)
    find_dependency(umpire REQUIRED NO_DEFAULT_PATH PATHS "${UMPIRE_DIR}")
  endif()

  # RAJA
  if(SERAC_USE_RAJA)
    find_dependency(raja REQUIRED NO_DEFAULT_PATH PATHS "${RAJA_DIR}")
  endif()

  # CHAI
  if(SERAC_USE_CHAI)
    find_dependency(CHAI REQUIRED NO_DEFAULT_PATH PATHS "${CHAI_DIR}")
  endif()

  # SUNDIALS
  if(SERAC_USE_SUNDIALS)
    find_dependency(SUNDIALS REQUIRED NO_DEFAULT_PATH PATHS "${SUNDIALS_DIR}")
  endif()

  #----------------------------------------------------------------------------
  # Include targets exported by CMake
  #----------------------------------------------------------------------------
  get_filename_component(SERAC_CMAKE_CONFIG_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
  include(${SERAC_CMAKE_CONFIG_DIR}/serac-targets.cmake)

  #----------------------------------------------------------------------------
  # Indicate that Serac is correctly set up
  #----------------------------------------------------------------------------
  set(SERAC_FOUND TRUE)

endif()
