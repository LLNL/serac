####
# This is the shared configuration of jobs for quartz
.on_quartz:
  tags:
    - shell
    - quartz
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /_qnone/ || $ON_QUARTZ == "OFF"' #run except if ...
      when: never
    - if: '$CI_JOB_NAME =~ /quartz_release/'
      when: always
    - when: on_success

####
# In pre-build phase, allocate a node for builds
quartz_allocate:
  variables:
    GIT_STRATEGY: none
  extends: [.on_quartz, .src_workflow]
  stage: allocate
  script:
    - salloc -p pdebug -A eng -N 1 -c 36 -t 30 --no-shell --job-name=${PROJECT_ALLOC_NAME}
  needs: []

####
# In post-build phase, deallocate resources
# Note : make sure this is run even on build phase failure
quartz_release:
  variables:
    GIT_STRATEGY: none
  extends: [.on_quartz, .src_workflow]
  stage: release
  script:
    - export JOBID=$(squeue -h --name=${PROJECT_ALLOC_NAME} --format=%A)
    - if [[ -n "${JOBID}" ]]; then scancel ${JOBID}; fi

####
# Template
.src_build_on_quartz:
  stage: build
  variables:
    ALLOC_COMMAND: "srun -p pdebug -A eng -t 10 -N 1 ${ASSIGN_ID}"
  extends: [.src_build_script, .on_quartz, .src_workflow]
  needs: [quartz_allocate]

.full_build_on_quartz:
  stage: build
  variables:
    ALLOC_COMMAND: "srun -p pdebug -A eng -t 45 -N 1"
  extends: [.full_build_script, .on_quartz, .full_workflow]
  needs: []

####
# Build jobs
quartz-clang_10_0_0-src:
  variables:
    COMPILER: "clang@10.0.0"
    HOST_CONFIG: "quartz-toss_3_x86_64_ib-${COMPILER}.cmake"
  extends: .src_build_on_quartz

quartz-gcc_8_3_1-src:
  variables:
    COMPILER: "gcc@8.3.1"
    HOST_CONFIG: "quartz-toss_3_x86_64_ib-${COMPILER}.cmake"
  extends: .src_build_on_quartz

quartz-clang_10_0_0-full:
  variables:
    COMPILER: "clang@10.0.0"
    SPEC: "%${COMPILER}"
  extends: .full_build_on_quartz

quartz-gcc_8_3_1-full:
  variables:
    COMPILER: "gcc@8.3.1"
    SPEC: "%${COMPILER}"
  extends: .full_build_on_quartz
